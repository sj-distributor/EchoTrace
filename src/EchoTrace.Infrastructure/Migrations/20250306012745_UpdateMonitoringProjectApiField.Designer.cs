// <auto-generated />
using System;
using EchoTrace.Infrastructure.DataPersistence.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EchoTrace.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250306012745_UpdateMonitoringProjectApiField")]
    partial class UpdateMonitoringProjectApiField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EchoTrace.Infrastructure.DataPersistence.EfCore.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("password_hash");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("application_user", (string)null);
                });

            modelBuilder.Entity("EchoTrace.Infrastructure.DataPersistence.EfCore.Entities.MonitoringProjects.MonitoringProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar")
                        .HasColumnName("base_url");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("monitoring_project", null, t =>
                        {
                            t.HasComment("监控项目");
                        });
                });

            modelBuilder.Entity("EchoTrace.Infrastructure.DataPersistence.EfCore.Entities.MonitoringProjects.MonitoringProjectApi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("ApiName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("api_name");

                    b.Property<string>("ApiUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar")
                        .HasColumnName("api_url");

                    b.Property<string>("BodyJson")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("body_json");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<int>("ExpectationCode")
                        .HasColumnType("int")
                        .HasColumnName("expectation_code");

                    b.Property<int>("HttpRequestMethod")
                        .HasColumnType("int")
                        .HasColumnName("http_request_method");

                    b.Property<bool>("IsDeactivate")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deactivate");

                    b.Property<int>("MonitorInterval")
                        .HasColumnType("int")
                        .HasColumnName("monitor_interval");

                    b.Property<Guid>("MonitoringProjectId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("monitoring_project_id");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringProjectId");

                    b.ToTable("monitoring_project_api", null, t =>
                        {
                            t.HasComment("监控项目接口");
                        });
                });

            modelBuilder.Entity("EchoTrace.Infrastructure.DataPersistence.EfCore.Entities.MonitoringProjects.MonitoringProjectApiLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<int>("HealthLevel")
                        .HasColumnType("int")
                        .HasColumnName("health_level");

                    b.Property<Guid>("MonitoringProjectApiId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("monitoring_project_api_id");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringProjectApiId");

                    b.ToTable("monitoring_project_api_log", null, t =>
                        {
                            t.HasComment("监控项目接口日志");
                        });
                });

            modelBuilder.Entity("EchoTrace.Infrastructure.DataPersistence.EfCore.Entities.MonitoringProjects.MonitoringProjectApiQueryParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<Guid>("MonitoringProjectApiId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("monitoring_project_api_id");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("parameter_name");

                    b.Property<string>("ParameterValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("parameter_value");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringProjectApiId");

                    b.ToTable("monitoring_project_api_query_parameter", null, t =>
                        {
                            t.HasComment("ApiQuery参数");
                        });
                });

            modelBuilder.Entity("EchoTrace.Infrastructure.DataPersistence.EfCore.Entities.MonitoringProjects.MonitoringProjectApiRequestHeaderInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<Guid>("MonitoringProjectApiId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)")
                        .HasColumnName("monitoring_project_api_id");

                    b.Property<string>("RequestHeaderKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("request_header_key");

                    b.Property<string>("RequestHeaderValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("request_header_value");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringProjectApiId");

                    b.ToTable("monitoring_project_api_request_header_info", null, t =>
                        {
                            t.HasComment("Api请求头信息");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
